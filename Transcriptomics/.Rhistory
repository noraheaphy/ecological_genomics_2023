png(filename = "myresults/figures/genes_dds2.png", width = 20, height = 16, units = "cm", res = 300)
p
dev.off()
plotMA(res_F0_OWvAM, ylim = c(-4,4))
# We can make an MA plot
png(filename = "myresults/figures/MA_dds2.png", width = 20, height = 16, units = "cm", res = 300)
plotMA(res_F0_OWvAM, ylim = c(-4,4))
dev.off()
# By environment
vsd <- vst(dds_sub, blind = FALSE)
topgenes <- head(rownames(res_F0_OWvAM),100)
mat <- assay(vsd)[topgenes,]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(dds_sub)[,c("generation","treatment")])
pheatmap(mat, annotation_col = df)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
png(filename = "myresults/figures/pheatmap_indiv_dds2.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
dev.off()
png(filename = "myresults/figures/pheatmap_indiv_dds2.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
# For OW vs AM
res_F0_OWvAM <- results(dds_sub, name="treatment_OW_vs_AM", alpha=0.05)
res_F0_OWvAM <- res_F0_OWvAM[order(res_F0_OWvAM$padj),]
head(res_F0_OWvAM)
summary(res_F0_OWvAM)
res_F0_OWvAM <- res_F0_OWvAM[!is.na(res_F0_OWvAM$padj),]
degs_F0_OWvAM <- row.names(res_F0_OWvAM[res_F0_OWvAM$padj < 0.05,])
# For OA vs AM
res_F0_OAvAM <- results(dds_sub, name="treatment_OA_vs_AM", alpha=0.05)
res_F0_OAvAM <- res_F0_OAvAM[order(res_F0_OAvAM$padj),]
head(res_F0_OAvAM)
summary(res_F0_OAvAM)
res_F0_OAvAM <- res_F0_OAvAM[!is.na(res_F0_OAvAM$padj),]
degs_F0_OAvAM <- row.names(res_F0_OAvAM[res_F0_OAvAM$padj < 0.05,])
# For OWA vs AM
res_F0_OWAvAM <- results(dds_sub, name="treatment_OWA_vs_AM", alpha=0.05)
res_F0_OWAvAM <- res_F0_OWAvAM[order(res_F0_OWAvAM$padj),]
head(res_F0_OWAvAM)
summary(res_F0_OWAvAM)
res_F0_OWAvAM <- res_F0_OWAvAM[!is.na(res_F0_OWAvAM$padj),]
degs_F0_OWAvAM <- row.names(res_F0_OWAvAM[res_F0_OWAvAM$padj < 0.05,])
# Total
length(degs_F0_OAvAM)  # 602
length(degs_F0_OWvAM)  # 5517
length(degs_F0_OWAvAM)  # 3918
# Intersections
length(intersect(degs_F0_OAvAM,degs_F0_OWvAM))  # 444
length(intersect(degs_F0_OAvAM,degs_F0_OWAvAM))  # 380
length(intersect(degs_F0_OWAvAM,degs_F0_OWvAM))  # 2743
intWA <- intersect(degs_F0_OAvAM,degs_F0_OWvAM)
length(intersect(degs_F0_OWAvAM,intWA)) # 338
744-559-441+399 # 116 OA
6236-559-2806+399 # 2668 OW
4004-441-2806+399 # 1133 OWA
559-399 # 106 OA & OW
441-399 # 42 OA & OWA
2806-399 # 2405 OWA & OW
# Note that the names are important and have to be specific to line up the diagram
fit1 <- euler(c("OA" = 143, "OW" = 3270, "OWA" = 1156, "OA&OW" = 160, "OA&OWA" = 42,
"OW&OWA" = 2407, "OA&OW&OWA" = 399))
plot(fit1,  lty = 1:3, quantities = TRUE)
png(filename = "myresults/figures/venn_dds2.png", width = 20, height = 16, units = "cm", res = 300)
plot(fit1,  lty = 1:3, quantities = TRUE)
dev.off()
#cross check
3270+160+399+2407 # 3918, total OW
1156+2407+42+399 # 5517, total OWA
143+42+399+160   # 602, total OA
# Filter
dds3 <- dds[rowSums(counts(dds) >= 15) >= 28,]
nrow(dds3)
# Filter
dds3 <- dds[rowSums(counts(dds) >= 10) >= 28,]
nrow(dds3)
# Subset the DESeqDataSet to the specific level of the "generation" factor
dds_sub <- subset(dds3, select = generation == 'F0')
dim(dds_sub)
# Perform DESeq2 analysis on the subset
dds_sub <- DESeq(dds_sub)
resultsNames(dds_sub)
res_F0_OWvAM <- results(dds_sub, name = "treatment_OW_vs_AM", alpha = 0.05)
res_F0_OWvAM <- res_F0_OWvAM[order(res_F0_OWvAM$padj),]
head(res_F0_OWvAM)
summary(res_F0_OWvAM)
# Counts of specific top interaction gene! (important validatition that the normalization, model is working)
d <- plotCounts(dds_sub, gene = "TRINITY_DN30_c0_g2::TRINITY_DN30_c0_g2_i1::g.130::m.130",
intgroup = (c("treatment","generation")), returnData = TRUE)
d
p <- ggplot(d, aes(x = treatment, y = count, color = treatment, shape = generation)) +
theme_minimal() + theme(text = element_text(size=20),
panel.grid.major = element_line(colour = "grey"))
p <- p + geom_point(position = position_jitter(w = 0.2, h = 0), size = 3)
p <- p + stat_summary(fun = mean, geom = "point", size = 5, alpha = 0.7)
p
png(filename = "myresults/figures/genes_dds3.png", width = 20, height = 16, units = "cm", res = 300)
p
dev.off()
plotMA(res_F0_OWvAM, ylim = c(-4,4))
# We can make an MA plot
png(filename = "myresults/figures/MA_dds3.png", width = 20, height = 16, units = "cm", res = 300)
plotMA(res_F0_OWvAM, ylim = c(-4,4))
dev.off()
# By environment
vsd <- vst(dds_sub, blind = FALSE)
topgenes <- head(rownames(res_F0_OWvAM),100)
mat <- assay(vsd)[topgenes,]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(dds_sub)[,c("generation","treatment")])
pheatmap(mat, annotation_col = df)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
png(filename = "myresults/figures/pheatmap_indiv_dds3.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
dev.off()
png(filename = "myresults/figures/pheatmap_indiv_dds3.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
# For OW vs AM
res_F0_OWvAM <- results(dds_sub, name="treatment_OW_vs_AM", alpha=0.05)
res_F0_OWvAM <- res_F0_OWvAM[order(res_F0_OWvAM$padj),]
head(res_F0_OWvAM)
summary(res_F0_OWvAM)
res_F0_OWvAM <- res_F0_OWvAM[!is.na(res_F0_OWvAM$padj),]
degs_F0_OWvAM <- row.names(res_F0_OWvAM[res_F0_OWvAM$padj < 0.05,])
# For OA vs AM
res_F0_OAvAM <- results(dds_sub, name="treatment_OA_vs_AM", alpha=0.05)
res_F0_OAvAM <- res_F0_OAvAM[order(res_F0_OAvAM$padj),]
head(res_F0_OAvAM)
summary(res_F0_OAvAM)
res_F0_OAvAM <- res_F0_OAvAM[!is.na(res_F0_OAvAM$padj),]
degs_F0_OAvAM <- row.names(res_F0_OAvAM[res_F0_OAvAM$padj < 0.05,])
# For OWA vs AM
res_F0_OWAvAM <- results(dds_sub, name="treatment_OWA_vs_AM", alpha=0.05)
res_F0_OWAvAM <- res_F0_OWAvAM[order(res_F0_OWAvAM$padj),]
head(res_F0_OWAvAM)
summary(res_F0_OWAvAM)
res_F0_OWAvAM <- res_F0_OWAvAM[!is.na(res_F0_OWAvAM$padj),]
degs_F0_OWAvAM <- row.names(res_F0_OWAvAM[res_F0_OWAvAM$padj < 0.05,])
# Total
length(degs_F0_OAvAM)  # 744
length(degs_F0_OWvAM)  # 6236
length(degs_F0_OWAvAM)  # 4004
# Intersections
length(intersect(degs_F0_OAvAM,degs_F0_OWvAM))  # 559
length(intersect(degs_F0_OAvAM,degs_F0_OWAvAM))  # 441
length(intersect(degs_F0_OWAvAM,degs_F0_OWvAM))  # 2806
intWA <- intersect(degs_F0_OAvAM,degs_F0_OWvAM)
length(intersect(degs_F0_OWAvAM,intWA)) # 399
666-503-404+367 # 143 OA
666-503-404+367 # 126 OA
5893-503-2803+367 # 3270 OW
4006-404-2803+367 # 1156 OWA
503-367 # 160 OA & OW
404-367 # 42 OA & OWA
2803-367 # 2407 OWA & OW
# Note that the names are important and have to be specific to line up the diagram
fit1 <- euler(c("OA" = 126, "OW" = 2954, "OWA" = 1166, "OA&OW" = 136, "OA&OWA" = 37,
"OW&OWA" = 2436, "OA&OW&OWA" = 367))
plot(fit1,  lty = 1:3, quantities = TRUE)
png(filename = "myresults/figures/venn_dds3.png", width = 20, height = 16, units = "cm", res = 300)
plot(fit1,  lty = 1:3, quantities = TRUE)
dev.off()
#cross check
2954+2436+367+136 # 6236, total OW
1166+2436+367+37 # 4004, total OWA
126+136+367+37   # 744, total OA
# Filter
dds4 <- dds[rowSums(counts(dds) >= 25) >= 28,]
nrow(dds4)
# Subset the DESeqDataSet to the specific level of the "generation" factor
dds_sub <- subset(dds4, select = generation == 'F0')
dim(dds_sub)
# Perform DESeq2 analysis on the subset
dds_sub <- DESeq(dds_sub)
resultsNames(dds_sub)
res_F0_OWvAM <- results(dds_sub, name = "treatment_OW_vs_AM", alpha = 0.05)
res_F0_OWvAM <- res_F0_OWvAM[order(res_F0_OWvAM$padj),]
head(res_F0_OWvAM)
summary(res_F0_OWvAM)
# Counts of specific top interaction gene! (important validatition that the normalization, model is working)
d <- plotCounts(dds_sub, gene = "TRINITY_DN30_c0_g2::TRINITY_DN30_c0_g2_i1::g.130::m.130",
intgroup = (c("treatment","generation")), returnData = TRUE)
d
p <- ggplot(d, aes(x = treatment, y = count, color = treatment, shape = generation)) +
theme_minimal() + theme(text = element_text(size=20),
panel.grid.major = element_line(colour = "grey"))
p <- p + geom_point(position = position_jitter(w = 0.2, h = 0), size = 3)
p <- p + stat_summary(fun = mean, geom = "point", size = 5, alpha = 0.7)
p
png(filename = "myresults/figures/genes_dds4.png", width = 20, height = 16, units = "cm", res = 300)
p
dev.off()
plotMA(res_F0_OWvAM, ylim = c(-4,4))
# We can make an MA plot
png(filename = "myresults/figures/MA_dds4.png", width = 20, height = 16, units = "cm", res = 300)
plotMA(res_F0_OWvAM, ylim = c(-4,4))
dev.off()
# By environment
vsd <- vst(dds_sub, blind = FALSE)
topgenes <- head(rownames(res_F0_OWvAM),100)
mat <- assay(vsd)[topgenes,]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(dds_sub)[,c("generation","treatment")])
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
png(filename = "myresults/figures/pheatmap_indiv_dds4.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
dev.off()
png(filename = "myresults/figures/pheatmap_indiv_dds4.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
# For OW vs AM
res_F0_OWvAM <- results(dds_sub, name="treatment_OW_vs_AM", alpha=0.05)
res_F0_OWvAM <- res_F0_OWvAM[order(res_F0_OWvAM$padj),]
head(res_F0_OWvAM)
summary(res_F0_OWvAM)
res_F0_OWvAM <- res_F0_OWvAM[!is.na(res_F0_OWvAM$padj),]
degs_F0_OWvAM <- row.names(res_F0_OWvAM[res_F0_OWvAM$padj < 0.05,])
# For OA vs AM
res_F0_OAvAM <- results(dds_sub, name="treatment_OA_vs_AM", alpha=0.05)
res_F0_OAvAM <- res_F0_OAvAM[order(res_F0_OAvAM$padj),]
head(res_F0_OAvAM)
summary(res_F0_OAvAM)
res_F0_OAvAM <- res_F0_OAvAM[!is.na(res_F0_OAvAM$padj),]
degs_F0_OAvAM <- row.names(res_F0_OAvAM[res_F0_OAvAM$padj < 0.05,])
# For OWA vs AM
res_F0_OWAvAM <- results(dds_sub, name="treatment_OWA_vs_AM", alpha=0.05)
res_F0_OWAvAM <- res_F0_OWAvAM[order(res_F0_OWAvAM$padj),]
head(res_F0_OWAvAM)
summary(res_F0_OWAvAM)
res_F0_OWAvAM <- res_F0_OWAvAM[!is.na(res_F0_OWAvAM$padj),]
degs_F0_OWAvAM <- row.names(res_F0_OWAvAM[res_F0_OWAvAM$padj < 0.05,])
# Total
length(degs_F0_OAvAM)  # 666
length(degs_F0_OWvAM)  # 5893
length(degs_F0_OWAvAM)  # 4006
# Intersections
length(intersect(degs_F0_OAvAM,degs_F0_OWvAM))  # 503
length(intersect(degs_F0_OAvAM,degs_F0_OWAvAM))  # 404
length(intersect(degs_F0_OWAvAM,degs_F0_OWvAM))  # 2803
intWA <- intersect(degs_F0_OAvAM,degs_F0_OWvAM)
length(intersect(degs_F0_OWAvAM,intWA)) # 367
541-402-352+318 # 126 OA
5066-402-2659+318 # 2954 OW
3832-352-2659+318 # 1166 OWA
402-318 # 136 OA & OW
352-318 # 37 OA & OWA
2659-318 # 2436 OWA & OW
# Note that the names are important and have to be specific to line up the diagram
fit1 <- euler(c("OA" = 105, "OW" = 2323, "OWA" = 1139, "OA&OW" = 84, "OA&OWA" = 34,
"OW&OWA" = 2341, "OA&OW&OWA" = 318))
plot(fit1,  lty = 1:3, quantities = TRUE)
png(filename = "myresults/figures/venn_dds4.png", width = 20, height = 16, units = "cm", res = 300)
plot(fit1,  lty = 1:3, quantities = TRUE)
dev.off()
# cross check
2323+2341+318+84 # 5893, total OW
1139+2341+318+34 # 4006, total OWA
105+34+318+84   # 666, total OA
# Filter
dds5 <- dds[rowSums(counts(dds) >= 35) >= 28,]
nrow(dds5)
# Subset the DESeqDataSet to the specific level of the "generation" factor
dds_sub <- subset(dds5, select = generation == 'F0')
dim(dds_sub)
# Perform DESeq2 analysis on the subset
dds_sub <- DESeq(dds_sub)
resultsNames(dds_sub)
res_F0_OWvAM <- results(dds_sub, name = "treatment_OW_vs_AM", alpha = 0.05)
res_F0_OWvAM <- res_F0_OWvAM[order(res_F0_OWvAM$padj),]
head(res_F0_OWvAM)
summary(res_F0_OWvAM)
# Counts of specific top interaction gene! (important validatition that the normalization, model is working)
d <- plotCounts(dds_sub, gene = "TRINITY_DN30_c0_g2::TRINITY_DN30_c0_g2_i1::g.130::m.130",
intgroup = (c("treatment","generation")), returnData = TRUE)
d
p <- ggplot(d, aes(x = treatment, y = count, color = treatment, shape = generation)) +
theme_minimal() + theme(text = element_text(size=20),
panel.grid.major = element_line(colour = "grey"))
p <- p + geom_point(position = position_jitter(w = 0.2, h = 0), size = 3)
p <- p + stat_summary(fun = mean, geom = "point", size = 5, alpha = 0.7)
p
png(filename = "myresults/figures/genes_dds5.png", width = 20, height = 16, units = "cm", res = 300)
p
dev.off()
# We can make an MA plot
png(filename = "myresults/figures/MA_dds5.png", width = 20, height = 16, units = "cm", res = 300)
plotMA(res_F0_OWvAM, ylim = c(-4,4))
dev.off()
# By environment
vsd <- vst(dds_sub, blind = FALSE)
topgenes <- head(rownames(res_F0_OWvAM),100)
mat <- assay(vsd)[topgenes,]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(dds_sub)[,c("generation","treatment")])
pheatmap(mat, annotation_col = df)
png(filename = "myresults/figures/pheatmap_indiv_dds5.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
dev.off()
png(filename = "myresults/figures/pheatmap_indiv_dds5.png", width = 20, height = 16, units = "cm", res = 300)
pheatmap(mat, annotation_col = df, cluster_cols = F, show_rownames = F)
dev.off()
# For OW vs AM
res_F0_OWvAM <- results(dds_sub, name="treatment_OW_vs_AM", alpha=0.05)
res_F0_OWvAM <- res_F0_OWvAM[order(res_F0_OWvAM$padj),]
head(res_F0_OWvAM)
summary(res_F0_OWvAM)
res_F0_OWvAM <- res_F0_OWvAM[!is.na(res_F0_OWvAM$padj),]
degs_F0_OWvAM <- row.names(res_F0_OWvAM[res_F0_OWvAM$padj < 0.05,])
# For OA vs AM
res_F0_OAvAM <- results(dds_sub, name="treatment_OA_vs_AM", alpha=0.05)
res_F0_OAvAM <- res_F0_OAvAM[order(res_F0_OAvAM$padj),]
head(res_F0_OAvAM)
summary(res_F0_OAvAM)
res_F0_OAvAM <- res_F0_OAvAM[!is.na(res_F0_OAvAM$padj),]
degs_F0_OAvAM <- row.names(res_F0_OAvAM[res_F0_OAvAM$padj < 0.05,])
# For OWA vs AM
res_F0_OWAvAM <- results(dds_sub, name="treatment_OWA_vs_AM", alpha=0.05)
res_F0_OWAvAM <- res_F0_OWAvAM[order(res_F0_OWAvAM$padj),]
head(res_F0_OWAvAM)
summary(res_F0_OWAvAM)
res_F0_OWAvAM <- res_F0_OWAvAM[!is.na(res_F0_OWAvAM$padj),]
degs_F0_OWAvAM <- row.names(res_F0_OWAvAM[res_F0_OWAvAM$padj < 0.05,])
# Total
length(degs_F0_OAvAM)  # 541
length(degs_F0_OWvAM)  # 5066
length(degs_F0_OWAvAM)  # 3832
# Intersections
length(intersect(degs_F0_OAvAM,degs_F0_OWvAM))  # 402
length(intersect(degs_F0_OAvAM,degs_F0_OWAvAM))  # 352
length(intersect(degs_F0_OWAvAM,degs_F0_OWvAM))  # 2659
intWA <- intersect(degs_F0_OAvAM,degs_F0_OWvAM)
length(intersect(degs_F0_OWAvAM,intWA)) # 318
501-373-330+302 # 105 OA
4672-373-2525+302 # 2323 OW
3651-330-2525+302 # 1139 OWA
373-302 # 84 OA & OW
330-302 # 34 OA & OWA
2525-302 # 2341 OWA & OW
# Note that the names are important and have to be specific to line up the diagram
fit1 <- euler(c("OA" = 100, "OW" = 2076, "OWA" = 1098, "OA&OW" = 71, "OA&OWA" = 28,
"OW&OWA" = 2223, "OA&OW&OWA" = 302))
plot(fit1,  lty = 1:3, quantities = TRUE)
png(filename = "myresults/figures/venn_dds5.png", width = 20, height = 16, units = "cm", res = 300)
plot(fit1,  lty = 1:3, quantities = TRUE)
dev.off()
# cross check
2076+2223+302+71 # 5066, total OW
1098+2223+302+28 # 3832, total OWA
100+71+28+302   # 541, total OA
View(countsTable)
dds1 <- dds[rowSums(counts(dds) >= 15) >= 28,]
nrow(dds1) # [1] 25260
# Run the DESeq model to test for differential gene expression
# this takes a little bit of time
dds1 <- DESeq(dds1)
dds <- DESeqDataSetFromMatrix(countData = countsTableRound, colData = conds,
design = ~ generation + treatment)
dim(dds) # [1] 67916    38
dds1 <- dds[rowSums(counts(dds) >= 15) >= 28,]
nrow(dds1) # [1] 25260
# Run the DESeq model to test for differential gene expression
# this takes a little bit of time
dds1 <- DESeq(dds1)
# List the results you've generated
resultsNames(dds1)
# this gives log2(n + 1)
ntd <- normTransform(dds1)
# Variance stabilizing transformation
vsd <- vst(dds1, blind = FALSE)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$treatment, vsd$generation, sep="-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)
# first transform the data for plotting using variance stabilization
vsd <- vst(dds1, blind = FALSE)
pcaData <- plotPCA(vsd, intgroup = c("treatment", "generation"), returnData = TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color = treatment, shape = generation)) +
geom_point(size = 3) +
xlab(paste0("PC1: ", percentVar[1],"% variance")) +
ylab(paste0("PC2: ", percentVar[2],"% variance")) +
coord_fixed()
data <- plotPCA(vsd, intgroup = c("treatment", "generation"), returnData = TRUE)
percentVar <- round(100 * attr(data, "percentVar"))
dataF0 <- subset(data, generation == 'F0')
F0 <- ggplot(dataF0, aes(PC1, PC2)) +
geom_point(size = 10, stroke = 1.5, aes(fill = treatment, shape = treatment)) +
xlab(paste0("PC1: ", percentVar[1],"% variance")) +
ylab(paste0("PC2: ", percentVar[2],"% variance")) +
ylim(-10, 25) + xlim(-40, 10)+ # zoom for F0 with new assembly
#ylim(-40, 25) + xlim(-50, 50)+ # new assembly limits
#ylim(-40, 20) + xlim(-50, 30)+
scale_shape_manual(values = c(21,22,23,24), labels = c("Ambient", "Acidification","Warming",
"OWA"))+
scale_fill_manual(values = c('#6699CC', "#F2AD00", "#00A08A", "#CC3333"),
labels = c("Ambient", "Acidification","Warming", "OWA"))+
##theme(legend.position = c(0.83,0.85), legend.background = element_blank(), legend.box.background = element_rect(colour = "black")) +
#guides(shape = guide_legend(override.aes = list(shape = c( 21,22, 23, 24))))+
#guides(fill = guide_legend(override.aes = list(shape = c( 21,22, 23, 24))))+
#guides(shape = guide_legend(override.aes = list(size = 5)))+
theme_bw() +
theme(legend.position = "none") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 4))+
theme(text = element_text(size = 20)) +
theme(legend.title = element_blank())
F0
dataF2 <- subset(data, generation == 'F2')
F2 <- ggplot(dataF2, aes(PC1, PC2)) +
geom_point(size=10, stroke = 1.5, aes(fill = treatment, shape = treatment)) +
xlab(paste0("PC1: ", percentVar[1], "% variance")) +
ylab(paste0("PC2: ", percentVar[2], "% variance")) +
ylim(-40, 25) + xlim(-50, 55)+
#ylim(-40, 20) + xlim(-50, 30)+
scale_shape_manual(values=c(21,22,23), labels = c("Ambient", "Acidification","Warming"))+
# scale_color_manual(values = c('#6699CC',"#F2AD00","#00A08A", "#CC3333")) +
#scale_color_manual(values=c('black')) +
scale_fill_manual(values=c('#6699CC',"#F2AD00","#00A08A"),
labels = c("Ambient", "Acidification","Warming"))+
theme(legend.position = c(0.83, 0.85), legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
#scale_size(guide="none") +
guides(shape = guide_legend(override.aes = list(shape = c( 21,22, 23))))+
guides(fill = guide_legend(override.aes = list(shape = c( 21,22, 23))))+
guides(shape = guide_legend(override.aes = list(size = 5)))+
theme_bw() +
theme(legend.position = "none") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 4))+
theme(text = element_text(size = 20)) +
theme(legend.title = element_blank())
F2
dataF4 <- subset(data, generation == 'F4')
F4 <- ggplot(dataF4, aes(PC1, PC2)) +
geom_point(size=10, stroke = 1.5, aes(fill=treatment, shape=treatment)) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ylim(-40, 25) + xlim(-50, 55)+ # limits with filtered assembly
#ylim(-20, 10) + xlim(-40, 25)+  # zoom with filtered assembly
#ylim(-40, 20) + xlim(-50, 30)+
scale_shape_manual(values=c(21,22,23,24), labels = c("Ambient", "Acidification","Warming", "OWA"))+
# scale_color_manual(values = c('#6699CC',"#F2AD00","#00A08A", "#CC3333")) +
#scale_color_manual(values=c('black')) +
scale_fill_manual(values=c('#6699CC',"#F2AD00","#00A08A", "#CC3333"), labels = c("Ambient", "Acidification","Warming", "OWA"))+
#theme(legend.position = c(0.83,0.85), legend.background = element_blank(), legend.box.background = element_rect(colour = "black")) +
#scale_size(guide="none") +
guides(shape = guide_legend(override.aes = list(shape = c( 21,22, 23, 24))))+
guides(fill = guide_legend(override.aes = list(shape = c( 21,22, 23, 24))))+
guides(shape = guide_legend(override.aes = list(size = 5)))+
theme_bw() +
theme(legend.position = "none") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 4))+
theme(text = element_text(size = 20)) +
theme(legend.title = element_blank())
F4
dataF11 <- subset(data, generation == 'F11')
F11 <- ggplot(dataF11, aes(PC1, PC2)) +
geom_point(size=10, stroke = 1.5, aes(fill=treatment, shape=treatment)) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ylim(-45, 25) + xlim(-50, 55)+
#ylim(-40, 20) + xlim(-50, 30)+
scale_shape_manual(values=c(21,24), labels = c("Ambient", "OWA"))+
scale_fill_manual(values=c('#6699CC', "#CC3333"), labels = c("Ambient", "OWA"))+
guides(shape = guide_legend(override.aes = list(shape = c( 21, 24))))+
guides(fill = guide_legend(override.aes = list(shape = c( 21, 24))))+
guides(shape = guide_legend(override.aes = list(size = 5)))+
theme_bw() +
theme(legend.position = "none") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 4))+
theme(text = element_text(size = 20)) +
theme(legend.title = element_blank())
F11
ggarrange(F0, F2, F4, F11, nrow = 2, ncol = 2)
?ggsave
ggsave("myresults/figures/PCA.png", width = 20, height = 16, units = "cm", dpi = 300)
ggsave("myresults/figures/PCA.png", width = 22, height = 16, units = "cm", dpi = 300)
ggsave("myresults/figures/PCA.png", width = 25, height = 16, units = "cm", dpi = 300)
F0 <- ggplot(dataF0, aes(PC1, PC2)) +
geom_point(size = 10, stroke = 1.5, aes(fill = treatment, shape = treatment)) +
xlab(paste0("PC1: ", percentVar[1],"% variance")) +
ylab(paste0("PC2: ", percentVar[2],"% variance")) +
ylim(-10, 25) + xlim(-40, 10)+ # zoom for F0 with new assembly
#ylim(-40, 25) + xlim(-50, 50)+ # new assembly limits
#ylim(-40, 20) + xlim(-50, 30)+
scale_shape_manual(values = c(21,22,23,24), labels = c("Ambient", "Acidification","Warming",
"OWA"))+
scale_fill_manual(values = c('#6699CC', "#F2AD00", "#00A08A", "#CC3333"),
labels = c("Ambient", "Acidification","Warming", "OWA"))+
##theme(legend.position = c(0.83,0.85), legend.background = element_blank(), legend.box.background = element_rect(colour = "black")) +
#guides(shape = guide_legend(override.aes = list(shape = c( 21,22, 23, 24))))+
#guides(fill = guide_legend(override.aes = list(shape = c( 21,22, 23, 24))))+
#guides(shape = guide_legend(override.aes = list(size = 5)))+
theme_bw() +
theme(legend.position = "none") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 2))+
theme(text = element_text(size = 20)) +
theme(legend.title = element_blank())
F0
png("PCA_F0.png", res=300, height=5, width=5, units="in")
ggarrange(F0, nrow = 1, ncol=1)
dev.off()
View(res_F0_OAvAM)
View(res_F0_OWAvAM)
